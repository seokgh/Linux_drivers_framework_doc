-------------------------------------------------------------------------------------------------------------------------------------------------
Process Page Table vs Kernel page table
-------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------
- プロセスの線形アドレス空間は、2つの部分に分けられます。
------------------------------------------------------------------------
      1. 0x00000000〜0xbfffffff（3GB領域）の線形アドレスは、プロセスがユーザーモードと、カーネルモードのどちらにあっても、常にアクセスできます。
      2. 0xc0000000〜0xffffffff（1GB領域）の線形アドレスは、プロセスがカーネルモードにあるときにのみ、アクセス可能です。

- プロセスが
  ユーザーモードで動作している場合は、0xC0000000より小さい線形アドレスを作成し、
  カーネルモードで動作しているときは、カーネルコードを実行しながら、0xC0000000以上の線形アドレスを使用します。

- 0xC0000000以下の線形アドレスを、マッピングする、ページグローバルディレクトリ（PGD）の対応するエントリの内容は、プロセスによって異なります。
  一方、残りのエントリ（0xC0000000以上の線形アドレスに対応するエントリ）は、すべてのプロセスで同じであり、Master Kernel Page Global Directoryの対応するエントリと同じです。


------------------------------------------------------------------------
カーネルページテーブル
------------------------------------------------------------------------
- カーネルは自分が使用するためのページテーブルの集合を管理し、これを Master Kernel Page Global Directory と呼びます。
  システムを初期化した後、どのプロセスやカーネルスレッドも、このページテーブルを直接使用しません。
  しかし、master kernel page global directoryの上位にあるエントリ（0xC0000000上位アドレスを表すエントリ）は、システム内のすべての通常のプロセスのPGDにある対応するエントリの参照モデル(reference model)である。
- つまり、master kernel page global directoryは、プロセスのPGDの0xC0000000上位のエントリを設定するときに参照されます。

問：  それでは、カーネルはどのように、自分のページテーブルを初期化するのですか？
答：  以下の2つのステップで、自分のページテーブルを初期化します。
     1.カーネルコード、データセグメント、初期ページテーブル、128KBの動的データ構造のために、カーネルは限られたアドレス空間を作成し、ページテーブルを作成します。 このようなページテーブルを仮カーネルページテーブル（Provisional kernel page Table）という。
      制限されたアドレス空間のサイズが8MBだとすると、8MBサイズのメモリを表現するためのページテーブルは2つのページを必要とする。これらのアドレス空間を表す2つのページサイズのページテーブルを初期化します。
     2.カーネルはすべてのメモリ領域に対してページテーブルを適切にします。
